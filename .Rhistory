slc2a9_ld = as.matrix(fread("data2/slc2a9_only.ld"))
slc2a9_freq = fread("data2/slc2a9_only.frq", header=T)
slc2a9_stats = fread("data2/slc2a9_summary.txt", header=F)
slc2a9_bim = fread("data2/slc2a9_only.bim", header=F)
slc2a9_data = merge(slc2a9_stats,slc2a9_freq,by.x="V1",by.y="SNP")
colnames(slc2a9_data)[1:13] = c("RSID","A1_X","A2_X","FREQ1","FREQ_SE","EFFECT","SE","P","study","GC","NSTUDY","SOMETHING","N")
slca9_data = merge(slc2a9_data,slc2a9_bim,by.x="RSID",by.y="V2")
colnames(slca9_data)[which(colnames(slca9_data) == "V4")] = "POS"
a =prep_dataset_coco(slca9_data,slc2a9_ld,var_y = 1.6421)
slc2a9_ld = as.matrix(fread("data2/slc2a9_only.ld"))
slc2a9_freq = fread("data2/slc2a9_only.frq", header=T)
slc2a9_stats = fread("data2/slc2a9_summary.txt", header=F)
slc2a9_bim = fread("data2/slc2a9_only.bim", header=F)
slc2a9_data = merge(slc2a9_stats,slc2a9_freq,by.x="V1",by.y="SNP")
colnames(slc2a9_data)[1:13] = c("RSID","A1_X","A2_X","FREQ1","FREQ_SE","EFFECT","SE","P","study","GC","NSTUDY","SOMETHING","N")
slca9_data = merge(slc2a9_data,slc2a9_bim,by.x="RSID",by.y="V2")
colnames(slca9_data)[which(colnames(slca9_data) == "V4")] = "POS"
a =prep_dataset_coco(slca9_data,slc2a9_ld,var_y = 1.6421)
slca9_data
a =prep_dataset_coco(slca9_data,slc2a9_ld,var_y = 1.6421,exact = T)
a =prep_dataset_coco(slca9_data,slc2a9_ld,var_y = 1.6421)
source('~/Programming/OpenSource/MyGitHub/coco/R/prep_dataset_coco.R')
a =prep_dataset_coco(slca9_data,slc2a9_ld,var_y = 1.6421)
g1 = stepwise_coco(a,joint = F,p_value_threshold = 9.186111e-06,max_iter = 5,colinear_threshold = 0.9,return_all_betas = T)
a$data_set$rsid == "rs4697936"
a$data_set[a$data_set$rsid == "rs4697936",]
a =prep_dataset_coco(slca9_data,slc2a9_ld,var_y = 1.6421)
a$exact
2 * .7342 * (1 - .7342)
slc2a9_freq
slc2a9_freq[slc2a9_freq$SNP == "rs4697936",]
13308/2
source('~/Programming/OpenSource/MyGitHub/coco/R/prep_dataset_coco.R')
a =prep_dataset_coco(slca9_data,slc2a9_ld,var_y = 1.6421)
g1 = stepwise_coco(a,joint = F,p_value_threshold = 9.186111e-06,max_iter = 5,colinear_threshold = 0.9,return_all_betas = T)
a$data_set$var
a =prep_dataset_coco(slca9_data,slc2a9_ld,var_y = 1.6421,exact = T)
source('~/Programming/OpenSource/MyGitHub/coco/R/prep_dataset_coco.R')
a =prep_dataset_coco(slca9_data,slc2a9_ld,var_y = 1.6421,exact = T)
a =prep_dataset_coco(slca9_data,slc2a9_ld,var_y = 1.6421)
g1 = stepwise_coco(a,joint = F,p_value_threshold = 9.186111e-06,max_iter = 5,colinear_threshold = 0.9,return_all_betas = T)
source('~/Programming/OpenSource/MyGitHub/coco/R/prep_dataset_coco.R')
g1 = stepwise_coco(a,joint = F,p_value_threshold = 9.186111e-06,max_iter = 5,colinear_threshold = 0.9,return_all_betas = T)
a =prep_dataset_coco(slca9_data,slc2a9_ld,var_y = 1.6421)
g1 = stepwise_coco(a,joint = F,p_value_threshold = 9.186111e-06,max_iter = 5,colinear_threshold = 0.9,return_all_betas = T)
slc2a9_freq[slc2a9_freq$SNP == "rs4697936",]
ueouao
require(bindata)
# Parameters of joint distribution
N <- 10
p1 <- 0.5
p2 <- 0.5
rho<- .6
hwe_diag = (2*freq_af$af * ( 1- freq_af$af) * freq_af$n)
#one_hundred = diag(100)
varx = 2*p1*(1-p1)
vary = 2*p2*(1-p2)
# Create one pair of correlated binomial values
X = c()
N=100
for(i in 1:100){
h1 <- rmvbin(N, c(p1,p2), bincorr=(1-rho)*diag(2)+rho)
h2 <- rmvbin(N, c(p1,p2), bincorr=(1-rho)*diag(2)+rho)
g1 = (h1[,1] + h2[,1])
g2 = (h1[,2] + h2[,2])
X = cbind(X, g1,g2)
}
h1 <- rmvbin(N, c(p1,p2), bincorr=(1-rho)*diag(2)+rho)
h2 <- rmvbin(N, c(p1,p2), bincorr=(1-rho)*diag(2)+rho)
require(bindata)
install.packages("bindata")
install.packages("e1071")
require(bindata)
# Parameters of joint distribution
N <- 10
p1 <- 0.5
p2 <- 0.5
rho<- .6
hwe_diag = (2*freq_af$af * ( 1- freq_af$af) * freq_af$n)
#one_hundred = diag(100)
varx = 2*p1*(1-p1)
vary = 2*p2*(1-p2)
# Create one pair of correlated binomial values
X = c()
N=100
for(i in 1:100){
h1 <- rmvbin(N, c(p1,p2), bincorr=(1-rho)*diag(2)+rho)
h2 <- rmvbin(N, c(p1,p2), bincorr=(1-rho)*diag(2)+rho)
g1 = (h1[,1] + h2[,1])
g2 = (h1[,2] + h2[,2])
X = cbind(X, g1,g2)
}
h1 <- rmvbin(N, c(p1,p2), bincorr=(1-rho)*diag(2)+rho)
h2 <- rmvbin(N, c(p1,p2), bincorr=(1-rho)*diag(2)+rho)
h1
h2
cor(h1)
X
X
princomp(X)
solve(X)
solve(X)
solve(t(X)%*%X)
ginv(t(X)%*%X)
ginv(t(X)%*%X)
library(MASS)
ginv(t(X)%*%X)
beta = rep(c(0.1,0),100)
h_sq = .6
eta = X %*% beta
y = eta + rnorm(N, 0, sd=sqrt((1-h_sq)))
eta
ginv(t(X)%*%X) %*% t(X) %*% y
betas = ginv(t(X)%*%X) %*% t(X) %*% y
betas
plot(betas)
betas = diag(ginv(t(X)%*%X)) %*% t(X) %*% y
betas
betas = diag(diag(ginv(t(X)%*%X))) %*% t(X) %*% y
betas
plot(betas)
apply(X,1,scale)
apply(X,1,function(x){scale(x)})
apply(X,1,function(x){scale(x)})
X2 = apply(X,1,function(x){scale(x)})
X2[,1]
var(X2[,1])
X2 = apply(X,1,function(x){scale(x)})
beta = rep(c(0.1,0),100)
h_sq = .6
eta = X2 %*% beta
y = eta + rnorm(N, 0, sd=sqrt((1-h_sq)))
beta = rep(c(0.1,0),100)
dim(X2)
beta = rep(c(0.1,0),100)
beta
eta = X2 %*% beta
X2
dim(X)
varx = 2*p1*(1-p1)
vary = 2*p2*(1-p2)
# Create one pair of correlated binomial values
X = c()
N=100
for(i in 1:100){
h1 <- rmvbin(N, c(p1,p2), bincorr=(1-rho)*diag(2)+rho)
h2 <- rmvbin(N, c(p1,p2), bincorr=(1-rho)*diag(2)+rho)
g1 = (h1[,1] + h2[,1])
g2 = (h1[,2] + h2[,2])
X = cbind(X, g1,g2)
}
X2 = apply(X,1,function(x){scale(x)})
X2 = apply(X,1,function(x){scale(x)})
h1 <- rmvbin(N, c(p1,p2), bincorr=(1-rho)*diag(2)+rho)
h2 <- rmvbin(N, c(p1,p2), bincorr=(1-rho)*diag(2)+rho)
g1 = (h1[,1] + h2[,1])
g2 = (h1[,2] + h2[,2])
h1 <- rmvbin(N, c(p1,p2), bincorr=(1-rho)*diag(2)+rho)
h2 <- rmvbin(N, c(p1,p2), bincorr=(1-rho)*diag(2)+rho)
g3 = (h1[,1] + h2[,1])
g4= (h1[,2] + h2[,2])
X = cbind(g1,g2,g3,g4)
beta = rep(c(0.1,0),100)
h_sq = .6
eta = X2 %*% beta
dim(X2)
X = c()
N=100
for(i in 1:100){
h1 <- rmvbin(N, c(p1,p2), bincorr=(1-rho)*diag(2)+rho)
h2 <- rmvbin(N, c(p1,p2), bincorr=(1-rho)*diag(2)+rho)
g1 = (h1[,1] + h2[,1])
g2 = (h1[,2] + h2[,2])
X = cbind(X, g1,g2)
}
X2 = apply(X,1,function(x){scale(x)})
beta = rep(c(0.1,0),100)
dim(beta)
length(beta)
dim(X2)
eta = X2 %*% beta
dim(beta)
length(beta)
ncol(X2)
ncol(X1)
length(beta)
dim(X)
X2 = t(apply(X,1,function(x){scale(x)}))
beta = rep(c(0.1,0),100)
h_sq = .6
eta = X2 %*% beta
y = eta + rnorm(N, 0, sd=sqrt((1-h_sq)))
ginv(t(X)%*%X) %*% t(X) %*% y
plot(ginv(t(X)%*%X) %*% t(X) %*% y)
betas = diag(diag(ginv(t(X)%*%X))) %*% t(X) %*% y
plot(betas)
plot(ginv(t(X)%*%X) %*% t(X) %*% y)
plot(betas)
plot(ginv(t(X)%*%X) %*% t(X) %*% y)
plot(betas)
sum(betas)
sum(betas^2)
sum(ginv(t(X)%*%X) %*% t(X) %*% y^2)
betas
sum(ginv(t(X)%*%X) %*% betas)
sum(ginv(t(X)%*%X) %*% betas^2)
sum((ginv(t(X)%*%X) %*% betas)^2)
plot(ginv(t(X)%*%X) %*% betas)
plot(ginv(t(X)%*%X) %*% betas)
betas
plot(ginv(t(X)%*%X) %*% betas)
betas = diag(diag(ginv(t(X2)%*%X2))) %*% t(X2) %*% y
y
betas = diag(diag(ginv(t(X2)%*%X2))) %*% t(X2) %*% y
betas
sum(betas^2)
betas = diag(diag(ginv(t(X2)%*%X2))) %*% t(X2) %*% y
ginv(t(X2)%*%X2) %*% betas
plot(ginv(t(X2)%*%X2) %*% betas)
t(X2)%*%X2
diag(t(X2)%*%X2)
diag(t(X2)%*%X2)
X2[,1]
X2[1,]
summary(X2[1,])
var(X2[1,])
mean(X2[1,])
cor(X2[1,])
cor(X2[1,])
cor(X2)
ginv(cor(X2))
ginv(cor(X2)) %*% beta
plot(ginv(cor(X2)) %*% beta)
plot(beta)
plot(ginv(cor(X2)) %*% betas)
plot(ginv(cor(X2)) %*% betas)
plot(betas)
plot(ginv(cor(X2)) %*% betas)
plot(betas)
plot(ginv(cor(X2)) %*% betas)
plot(betas)
plot(ginv(cor(X2)) %*% betas)
betas = diag(diag(ginv(cor(X2)))) %*% t(X2) %*% y
plot(betas)
plot(betas)
X2
X2
X2
cov(X2)
cov(X2)[,1]
diag(cov(X2))
diag(cov(X2))
diag(cov(X2))
X2
plot(ginv(cor(X2)) %*% betas)
plot(ginv(cor(X2)) %*% betas)
plot(ginv(cor(X2)) %*% betas)
plot(ginv(cor(X2)) %*% betas)
betas = diag(diag(ginv(t(X2)%*%X2))) %*% t(X2) %*% y
betas
plot(betas)
pca =princomp(X2)
N=100
for(i in 1:600){
h1 <- rmvbin(N, c(p1,p2), bincorr=(1-rho)*diag(2)+rho)
h2 <- rmvbin(N, c(p1,p2), bincorr=(1-rho)*diag(2)+rho)
g1 = (h1[,1] + h2[,1])
g2 = (h1[,2] + h2[,2])
X = cbind(X, g1,g2)
}
pca =princomp(cor(X2))
pca
plot(pca$loadings)
plot(pca$sdev)
W = X2 %*% X
pca =svd(cor(X2))
W = X2 %*% pca$v[1:10,]
W = X2 %*% pca$v[,1:10]
beta_pca = solve(t(W)%*%W) %*% W %*%
beta_pca = solve(t(W)%*%W) %*% t(W) %*% y
plot(beta_pca)
solve(t(W)%*%W) %*% t(W) %*% betas = diag(diag(ginv(t(X2)%*%X2))) %*% t(X2) %*% y
solve(t(W)%*%W) %*% t(W) %*% diag(diag(ginv(t(X2)%*%X2))) %*% t(X2) %*% y
diag(diag(ginv(t(X2)%*%X2))) %*% t(X2) %*% y
diag(diag(ginv(t(X2)%*%X2))) %*% t(X2) %*% y
t(W)
t(W)
t(W)
solve(t(W)%*%W) %*% t(W) %*% t(diag(diag(ginv(t(X2)%*%X2))) %*% t(X2) %*% y)
t(diag(diag(ginv(t(X2)%*%X2))) %*% t(X2) %*% y)
(diag(diag(ginv(t(X2)%*%X2))) %*% t(X2) %*% y)
X2
beta_pca = solve(t(W)%*%W) %*% t(W) %*% y
dim(w)
W = X2 %*% pca$v[,1:10]
dim(w)
dim(W)
dim(t(W)%*%W)
dim(X2)
y
beta
betas = diag(diag(ginv(t(X2)%*%X2))) %*% t(X2) %*% y
t(X2)
t(X2)
dim(w)
W = X2 %*% pca$v[,1:10]
dim(W)
beta_pca = solve(t(W)%*%W) %*% t(W) %*% y
beta_pca
W %*% t(diag(diag(ginv(t(X2)%*%X2))) %*% t(X2) %*% y)
t(diag(diag(ginv(t(X2)%*%X2))) %*% t(X2) %*% y) %*% W
(diag(diag(ginv(t(X2)%*%X2))) %*% t(X2) %*% y) %*% W
dim(pca$v)
t(diag(diag(ginv(t(X2)%*%X2))) %*% t(X2) %*% y)
solve(t(W)%*%W) %*% pca$v[,1:10] %*% t(diag(diag(ginv(t(X2)%*%X2))) %*% t(X2) %*% y)
solve(t(W)%*%W) %*% t(pca$v[,1:10]) %*% t(diag(diag(ginv(t(X2)%*%X2))) %*% t(X2) %*% y)
dim(t(diag(diag(ginv(t(X2)%*%X2))) %*% t(X2) %*% y))
dim(t(diag(diag(ginv(t(X2)%*%X2))) %*% t(X2) %*% y))
solve(t(W)%*%W) %*% t(pca$v[,1:10]) %*% (diag(diag(ginv(t(X2)%*%X2))) %*% t(X2) %*% y)
plot(solve(t(W)%*%W) %*% t(pca$v[,1:10]) %*% (diag(diag(ginv(t(X2)%*%X2))) %*% t(X2) %*% y))
plot(solve(t(W)%*%W) %*% t(pca$v[,1:10]) %*% (diag(diag(ginv(t(X2)%*%X2))) %*% t(X2) %*% y))
plot(beta_pca)
plot(solve(t(W)%*%W) %*% t(pca$v[,1:10]) %*% (diag(diag(ginv(t(X2)%*%X2))) %*% t(X2) %*% y))
(diag(diag(ginv(t(X2)%*%X2))) %*% t(X2) %*% y)
W = X2 %*% pca$v[,1:10]
W
W = X2 %*% pca$v[,1:10]
W
W2 = t(pca$v[,1:10]) %*% X2
W2 = (pca$v[,1:10]) %*% X2
W2 = (pca$v[1:10,]) %*% X2
pca$v[,1:10]
pca$v[,1:10] %*% (diag(diag(ginv(t(X2)%*%X2))) %*% t(X2) %*% y)
pca$v[,1:10] %*% (diag(diag(ginv(t(W)%*%W))) %*% t(W) %*% y)
plot(pca$v[,1:10] %*% (diag(diag(ginv(t(W)%*%W))) %*% t(W) %*% y))
plot (diag(diag(ginv(t(W)%*%W))) %*% t(W) %*% y))
plot (diag(diag(ginv(t(W)%*%W))) %*% t(W) %*% y)
plot(diag(diag(ginv(t(W)%*%W))) %*% t(W) %*% y)
plot(solve(t(W)%*%W) %*% diag(diag(ginv(t(W)%*%W))) %*% t(W) %*% y)
plot(diag(diag(ginv(t(W)%*%W))) %*% t(W) %*% y)
plot(solve(t(W)%*%W) %*% diag(diag(ginv(t(W)%*%W))) %*% t(W) %*% y)
beta_pca = solve(t(W)%*%W) %*% t(W) %*% y
solve(t(W)%*%W) %*% t(pca$v[,1:10]) %*% (diag(diag(ginv(t(W)%*%W))) %*% t(W) %*% y)
(diag(diag(ginv(t(W)%*%W)))
(diag(diag(ginv(t(W)%*%W))
(diag(diag(ginv(t(W)%*%W))))
t(W)
(diag(diag(ginv(t(W)%*%W))) %*% t(W) %*% y)
solve(t(W)%*%W) %*% (diag(diag(ginv(t(W)%*%W))) %*% t(W) %*% y)
solve(t(W)%*%W) %*% t(W) %*% y
solve(t(W)%*%W) %*% (diag(diag(ginv(t(W)%*%W))) %*% t(W) %*% y)
(diag(diag(ginv(t(W)%*%W)))
(diag(diag(ginv(t(W)%*%W))) )
(diag(diag(ginv(t(W)%*%W))))
(diag(diag(ginv(t(W)%*%W))))
solve(t(W)%*%W) %*% (diag(diag((t(W)%*%W))) %*% (diag(diag(ginv(t(W)%*%W))) %*% t(W) %*% y)
(diag(diag((t(W)%*%W))) %*% (diag(diag(ginv(t(W)%*%W)))
(diag(diag((t(W)%*%W))) %*% (diag(diag(ginv(t(W)%*%W))))
(diag(diag((t(W)%*%W)))) %*% (diag(diag(ginv(t(W)%*%W))))
solve(t(W)%*%W) %*% (diag(diag((t(W)%*%W)))) %*% (diag(diag(ginv(t(W)%*%W))) %*% t(W) %*% y)
# PCA regression from summary statistics
solve(t(W)%*%W) %*% (diag(diag((t(W)%*%W)))) %*% (diag(diag(ginv(t(W)%*%W))) %*% t(W) %*% y)
solve(t(W)%*%W) %*% t(W) %*% y
solve(t(W)%*%W) %*% t(W) %*% y
# PCA regression from summary statistics
solve(t(W)%*%W) %*% (diag(diag((t(W)%*%W)))) %*% (diag(diag(ginv(t(W)%*%W))) %*% t(W) %*% y)
solve(t(W)%*%W) %*% t(W) %*% y
W = X2 %*% pca$v[,1:10]
solve(t(W)%*%W) %*% t(W) %*% y
# PCA regression from summary statistics
solve(t(W)%*%W) %*% (diag(diag((t(W)%*%W)))) %*% (diag(diag(ginv(t(W)%*%W))) %*% t(W) %*% y)
solve(t(W)%*%W) %*% t(W) %*% y
solve(t(W)%*%W) %*% t(W) %*% y
# PCA regression from summary statistics
solve(t(W)%*%W) %*% (diag(diag((t(W)%*%W)))) %*% (diag(diag(ginv(t(W)%*%W))) %*% t(W) %*% y)
(diag(diag((t(W)%*%W)))) %*% (diag(diag(ginv(t(W)%*%W))) %*% t(W) %*% y)
t(W) %*% y
(diag(diag((t(W)%*%W)))) %*% (diag(diag(ginv(t(W)%*%W))) %*% t(W) %*% y)
t(W) %*% y
(diag(diag((t(W)%*%W)))) %*% (diag(diag(ginv(t(W)%*%W))) %*% t(W) %*% y)
t(W) %*% y
(diag(diag((t(W)%*%W)))) %*% (diag(diag(ginv(t(W)%*%W))) %*% t(W) %*% y)
t(W) %*% y
(diag(diag((t(W)%*%W)))) %*% (diag(diag(ginv(t(W)%*%W))) %*% t(W) %*% y)
t(W) %*% y
(diag(diag((t(W)%*%W)))) %*% (diag(diag(ginv(t(W)%*%W))) %*% t(W) %*% y)
require(bindata)
# Parameters of joint distribution.
N <- 10
p1 <- 0.5
p2 <- 0.5
rho<- .6
hwe_diag = (2*freq_af$af * ( 1- freq_af$af) * freq_af$n)
#one_hundred = diag(100)
varx = 2*p1*(1-p1)
vary = 2*p2*(1-p2)
# Create one pair of correlated binomial values
X = c()
N=100
for(i in 1:600){
h1 <- rmvbin(N, c(p1,p2), bincorr=(1-rho)*diag(2)+rho)
h2 <- rmvbin(N, c(p1,p2), bincorr=(1-rho)*diag(2)+rho)
g1 = (h1[,1] + h2[,1])
g2 = (h1[,2] + h2[,2])
X = cbind(X, g1,g2)
}
X2 = t(apply(X,1,function(x){scale(x)}))
h1 <- rmvbin(N, c(p1,p2), bincorr=(1-rho)*diag(2)+rho)
h2 <- rmvbin(N, c(p1,p2), bincorr=(1-rho)*diag(2)+rho)
g1 = (h1[,1] + h2[,1])
g2 = (h1[,2] + h2[,2])
h1 <- rmvbin(N, c(p1,p2), bincorr=(1-rho)*diag(2)+rho)
h2 <- rmvbin(N, c(p1,p2), bincorr=(1-rho)*diag(2)+rho)
g3 = (h1[,1] + h2[,1])
g4= (h1[,2] + h2[,2])
X = cbind(g1,g2,g3,g4)
X = X -1
cor(g1,g2)
beta = rep(c(0.1,0),100)
beta
X
h_sq = .6
eta = X2 %*% beta
y = eta + rnorm(N, 0, sd=sqrt((1-h_sq)))
X2 = t(apply(X,1,function(x){scale(x)}))
y = eta + rnorm(N, 0, sd=sqrt((1-h_sq)))
h_sq = .6
eta = X2 %*% beta
dim(x)
dim(X2)
dim(X)
N=100
for(i in 1:600){
h1 <- rmvbin(N, c(p1,p2), bincorr=(1-rho)*diag(2)+rho)
h2 <- rmvbin(N, c(p1,p2), bincorr=(1-rho)*diag(2)+rho)
g1 = (h1[,1] + h2[,1])
g2 = (h1[,2] + h2[,2])
X = cbind(X, g1,g2)
X = c()
N=100
for(i in 1:600){
h1 <- rmvbin(N, c(p1,p2), bincorr=(1-rho)*diag(2)+rho)
h2 <- rmvbin(N, c(p1,p2), bincorr=(1-rho)*diag(2)+rho)
g1 = (h1[,1] + h2[,1])
g2 = (h1[,2] + h2[,2])
X = cbind(X, g1,g2)
}
dim(X)
h1 <- rmvbin(N, c(p1,p2), bincorr=(1-rho)*diag(2)+rho)
beta = rep(c(0.1,0),100)
eta = X2 %*% beta
y = eta + rnorm(N, 0, sd=sqrt((1-h_sq)))
dim(X2)
dim(X)
X = c()
N=100
for(i in 1:N){
h1 <- rmvbin(N, c(p1,p2), bincorr=(1-rho)*diag(2)+rho)
h2 <- rmvbin(N, c(p1,p2), bincorr=(1-rho)*diag(2)+rho)
g1 = (h1[,1] + h2[,1])
g2 = (h1[,2] + h2[,2])
X = cbind(X, g1,g2)
}
X2 = t(apply(X,1,function(x){scale(x)}))
dim(X2)
beta = rep(c(0.1,0),100)
h_sq = .6
eta = X2 %*% beta
y = eta + rnorm(N, 0, sd=sqrt((1-h_sq)))
annotation = rbinom(n = 200)
annotation = rbinom(prob=1, n = 2)
annotation = rbinom(prob=1, n = 2, size=100)
annotation
annotation = rbinom(prob=.5, size=1)
annotation = rbinom(prob=.5, size=1,n=100)
annotation
library(lme4)
summary(lmer(y ~ annotation))
summary(lmer(y ~ annotation ))
summary(lmer(y ~ annotation  + (1 | annotation)))
summary(lmer(y ~ (1 | annotation)))
annotation = rbinom(prob=.5, size=2,n=100)
summary(lmer(y ~ annotation  + (1 | annotation)))
summary(lmer(y ~ annotation  + (1 | annotation)))
annotation
summary(lmer(y ~ factor(annotation)  + (1 | annotation)))
summary(lmer(y ~ factor(annotation)  + (1 )))
summary(lm(y ~ factor(annotation)))
summary(lmer(y ~ factor(annotation)  + (1|X2)))
summary(lmer(y ~ factor(annotation)  + (1|X2)))
dim(X2)
summary(lmer(y ~ factor(annotation)  + (1|X2)))
X2
X2
summary(lmer(y ~ factor(annotation)  + (1|t(X2)))
summary(lmer(y ~ factor(annotation)  + (1|t(X2))))
X2 | annotation
summary(lmer(y ~ factor(annotation)  + (X2 | annotation))
summary(lmer(y ~ factor(annotation)  + (X2 | annotation)))
summary(lmer(y ~  (X2 | annotation)))
summary(lmer(y ~  (X2 | annotation)))
summary(lmer(y ~ factor(annotation)  + (X2 | annotation)))
library(devtools)
install.packages("roxygen2")
library(devtools)
library(coco )
rm(ls()=all)
rm(all=ls())
rm(list=ls())
rm(all_but_one_coco())
rm(all_but_one_coco
rm(all_but_one_coco)
