library(data.table)
f_read = as.data.frame(fread("data2/kottgen_effect_filtered.txt", header=T))
ld_matrix = as.matrix(fread("data2/ABCG2.ld", header=F))
snpdat = as.data.frame(fread("data2/ABCG2.snpdat", header=T))
idx_in = which(snpdat$RSID %in% f_read$MarkerName)
ld_abcg2 = ld_matrix[idx_in, idx_in]
snpdat_abcg2 = snpdat[idx_in,]
f_merge = merge(f_read, snpdat_abcg2, by.x="MarkerName", by.y="RSID")
f_merge = f_merge[order(f_merge$POS),]
f_merge$Effect = ifelse(toupper(f_merge$Allele1) == toupper(f_merge$A2), f_merge$Effect, -f_merge$Effect)
colnames(f_merge)[1] = "SNP"
library(coco)
gg = prep_dataset_coco(data_set=f_merge, ld_matrix=ld_abcg2,hwe_variance = F,exact=T, var_y=1.61078)
gg = prep_dataset_coco(data_set=f_merge, ld_matrix=ld_abcg2,hwe_variance = F,exact=T, var_y=1.61078)
diag(ld_abcg2) = diag(ld_abcg2) + 0.001
lel = stepwise_coco(gg, joint=T,p_value_threshold =9.186111e-06)
diag(ld_abcg2) = diag(ld_abcg2) + 0.1
#f_merge$Freq1 = ifelse(f_merge$Freq1 > 0.5, 1 - f_merge$Freq1, f_merge$Freq1)
#f_merge$FREQ1 = ifelse(f_merge$FREQ1 > 0.5, 1 - f_merge$FREQ1, f_merge$FREQ1)
gg$exact = T
#gg$neff = (gg$var_y - gg$var *gg$b^2)/(gg$var *gg$se^2) + 1
lel = stepwise_coco(gg, joint=T,p_value_threshold =9.186111e-06)
get_ld(c("rs2231142","rs3114020","rs2622629","rs2728126"),gg)
gg = prep_dataset_coco(data_set=f_merge, ld_matrix=ld_abcg2,hwe_variance = F,exact=T, var_y=1.61078)
lel = stepwise_coco(gg, joint=T,p_value_threshold =9.186111e-06)
gg = prep_dataset_coco(data_set=f_merge, ld_matrix=ld_abcg2,hwe_variance = F,exact=F, var_y=1.61078)
lel = stepwise_coco(gg, joint=T,p_value_threshold =9.186111e-06)
gg = prep_dataset_coco(data_set=f_merge, ld_matrix=ld_abcg2,hwe_variance = F,exact=T, var_y=1.61078)
lel = stepwise_coco(gg, joint=T,p_value_threshold =9.186111e-06)
lel = stepwise_coco(gg, joint=F,p_value_threshold =9.186111e-06)
diag(ld_abcg2) = diag(ld_abcg2) - 0.15
diag(ld_abcg2)
lel = stepwise_coco(gg, joint=F,p_value_threshold =9.186111e-06)
gg = prep_dataset_coco(data_set=f_merge, ld_matrix=ld_abcg2,hwe_variance = F,exact=T, var_y=1.61078)
lel = stepwise_coco(gg, joint=F,p_value_threshold =9.186111e-06)
get_ld(c("rs2231142","rs3114020","rs2622629","rs2728126"),gg)
lel
lel = stepwise_coco(gg, joint=T,p_value_threshold =9.186111e-06)
lel = stepwise_coco(gg, joint=T,p_value_threshold =9.186111e-06)
diag(ld_abcg2) = diag(ld_abcg2) + 0.01
#f_merge$Freq1 = ifelse(f_merge$Freq1 > 0.5, 1 - f_merge$Freq1, f_merge$Freq1)
#f_merge$FREQ1 = ifelse(f_merge$FREQ1 > 0.5, 1 - f_merge$FREQ1, f_merge$FREQ1)
gg$exact = T
#gg$neff = (gg$var_y - gg$var *gg$b^2)/(gg$var *gg$se^2) + 1
lel = stepwise_coco(gg, joint=T,p_value_threshold =9.186111e-06)
gg = prep_dataset_coco(data_set=f_merge, ld_matrix=ld_abcg2,hwe_variance = F,exact=T, var_y=1.61078)
gg$exact = T
ld_abcg2 = ld_matrix[idx_in, idx_in]
diag(ld_abcg2) = diag(ld_abcg2) + 0.05
gg = prep_dataset_coco(data_set=f_merge, ld_matrix=ld_abcg2,hwe_variance = F,exact=T, var_y=1.61078)
lel = stepwise_coco(gg, joint=T,p_value_threshold =9.186111e-06)
gg = prep_dataset_coco(data_set=f_merge, ld_matrix=ld_abcg2,hwe_variance = F,exact=F, var_y=1.61078)
#gg$neff = (gg$var_y - gg$var *gg$b^2)/(gg$var *gg$se^2) + 1
lel = stepwise_coco(gg, joint=T,p_value_threshold =9.186111e-06)
gg = prep_dataset_coco(data_set=f_merge, ld_matrix=ld_abcg2,hwe_variance = F,exact=T, var_y=1.61078)
lel = stepwise_coco(gg, joint=T,p_value_threshold =9.186111e-06)
diag(ld_abcg2) = diag(ld_abcg2) + 0.2
#f_merge$Freq1 = ifelse(f_merge$Freq1 > 0.5, 1 - f_merge$Freq1, f_merge$Freq1)
#f_merge$FREQ1 = ifelse(f_merge$FREQ1 > 0.5, 1 - f_merge$FREQ1, f_merge$FREQ1)
lel = stepwise_coco(gg, joint=T,p_value_threshold =9.186111e-06)
gg = prep_dataset_coco(data_set=f_merge, ld_matrix=ld_abcg2,hwe_variance = F,exact=T, var_y=1.61078)
#gg$neff = (gg$var_y - gg$var *gg$b^2)/(gg$var *gg$se^2) + 1
lel = stepwise_coco(gg, joint=T,p_value_threshold =9.186111e-06)
diag(ld_abcg2)
diag(ld_abcg2) = diag(ld_abcg2) + 0.4
gg = prep_dataset_coco(data_set=f_merge, ld_matrix=ld_abcg2,hwe_variance = F,exact=T, var_y=1.61078)
lel = stepwise_coco(gg, joint=T,p_value_threshold =9.186111e-06)
idx_in = which(snpdat$RSID %in% f_read$MarkerName)
ld_abcg2 = ld_matrix[idx_in, idx_in]
snpdat_abcg2 = snpdat[idx_in,]
f_merge = merge(f_read, snpdat_abcg2, by.x="MarkerName", by.y="RSID")
diag(ld_abcg2) = diag(ld_abcg2) + 0.5
gg = prep_dataset_coco(data_set=f_merge, ld_matrix=ld_abcg2,hwe_variance = F,exact=T, var_y=1.61078)
lel = stepwise_coco(gg, joint=T,p_value_threshold =9.186111e-06)
lel
ld_abcg2 = ld_matrix[idx_in, idx_in]
snpdat_abcg2 = snpdat[idx_in,]
library(data.table)
f_read = as.data.frame(fread("data2/kottgen_effect_filtered.txt", header=T))
idx_in = which(snpdat$RSID %in% f_read$MarkerName)
ld_abcg2 = ld_matrix[idx_in, idx_in]
snpdat_abcg2 = snpdat[idx_in,]
gg = prep_dataset_coco(data_set=f_merge, ld_matrix=ld_abcg2,hwe_variance = F,exact=T, var_y=1.61078)
f_merge = merge(f_read, snpdat_abcg2, by.x="MarkerName", by.y="RSID")
f_merge = f_merge[order(f_merge$POS),]
f_merge$Effect = ifelse(toupper(f_merge$Allele1) == toupper(f_merge$A2), f_merge$Effect, -f_merge$Effect)
library(coco)
gg = prep_dataset_coco(data_set=f_merge, ld_matrix=ld_abcg2,hwe_variance = F,exact=T, var_y=1.61078)
library(data.table)
f_read = as.data.frame(fread("data2/kottgen_effect_filtered.txt", header=T))
f_read = as.data.frame(fread("data2/kottgen_effect_filtered.txt", header=T))
ld_matrix = as.matrix(fread("data2/ABCG2.ld", header=F))
snpdat = as.data.frame(fread("data2/ABCG2.snpdat", header=T))
idx_in = which(snpdat$RSID %in% f_read$MarkerName)
ld_abcg2 = ld_matrix[idx_in, idx_in]
snpdat_abcg2 = snpdat[idx_in,]
f_merge = merge(f_read, snpdat_abcg2, by.x="MarkerName", by.y="RSID")
f_merge = f_merge[order(f_merge$POS),]
f_merge$Effect = ifelse(toupper(f_merge$Allele1) == toupper(f_merge$A2), f_merge$Effect, -f_merge$Effect)
colnames(f_merge)[1] = "SNP"
library(coco)
gg = prep_dataset_coco(data_set=f_merge, ld_matrix=ld_abcg2,hwe_variance = F,exact=T, var_y=1.61078)
diag(ld_abcg2) = diag(ld_abcg2) + 0.5
lel = stepwise_coco(gg, joint=T,p_value_threshold =9.186111e-06)
lel = stepwise_coco(gg, joint=F,p_value_threshold =9.186111e-06)
beta = c(0.01, 0.001,.05,0)
h_sq = .6
eta = X %*% beta
y = eta + rnorm(N, 0, sd=sqrt((1-h_sq)))
X_small = X[1:1e5,]
y_small = y[1:1e5]
summary(lm(y ~ X))
summary(lm(y ~ X[,1]))
summary(lm(y ~ X[,2]))
beta = c(0.1, 0.01,.05,0)
h_sq = .6
eta = X %*% beta
y = eta + rnorm(N, 0, sd=sqrt((1-h_sq)))
X_small = X[1:1e5,]
y_small = y[1:1e5]
summary(lm(y ~ X))
summary(lm(y ~ X[,1]))
summary(lm(y ~ X[,2]))
summary(lm(y ~ X[,3]))
summary(lm(y ~ X[,4]))
summary(lm(y ~ X[,1:2]))
summary(lm(residuals(lm(y ~ X[,1])) ~ -1 +  X[,2]))
beta = c(0.1, -0.01,.05,0)
h_sq = .6
eta = X %*% beta
y = eta + rnorm(N, 0, sd=sqrt((1-h_sq)))
X_small = X[1:1e5,]
y_small = y[1:1e5]
summary(lm(y ~ X))
summary(lm(y ~ X[,1]))
summary(lm(y ~ X[,2]))
summary(lm(y ~ X[,3]))
summary(lm(y ~ X[,4]))
summary(lm(y ~ X[,1:2]))
summary(lm(residuals(lm(y ~ X[,1])) ~ -1 +  X[,2]))
summary(lm(y ~ X[,1:2]))
summary(lm(residuals(lm(y ~ X[,1])) ~ -1 +  X[,2]))
gg = prep_dataset_coco(data_set=f_merge, ld_matrix=ld_abcg2,hwe_variance = F,exact=T, var_y=1.61078)
lel = stepwise_coco(gg, joint=F,p_value_threshold =9.186111e-06)
ld_abcg2 = ld_matrix[idx_in, idx_in]
snpdat_abcg2 = snpdat[idx_in,]
f_merge = merge(f_read, snpdat_abcg2, by.x="MarkerName", by.y="RSID")
f_merge = f_merge[order(f_merge$POS),]
f_merge$Effect = ifelse(toupper(f_merge$Allele1) == toupper(f_merge$A2), f_merge$Effect, -f_merge$Effect)
colnames(f_merge)[1] = "SNP"
library(coco)
gg = prep_dataset_coco(data_set=f_merge, ld_matrix=ld_abcg2,hwe_variance = F,exact=T, var_y=1.61078)
lel = stepwise_coco(gg, joint=F,p_value_threshold =9.186111e-06)
gg = prep_dataset_coco(data_set=f_merge, ld_matrix=ld_abcg2,hwe_variance = F,exact=T, var_y=1.61078)
lel = stepwise_coco(gg, joint=F,p_value_threshold =9.186111e-06)
gg = prep_dataset_coco(data_set=f_merge, ld_matrix=ld_abcg2,hwe_variance = F,exact=T, var_y=1.6421)
lel = stepwise_coco(gg, joint=F,p_value_threshold =9.186111e-06)
gg = prep_dataset_coco(data_set=f_merge, ld_matrix=ld_abcg2,hwe_variance = F,exact=F, var_y=1.6421)
lel = stepwise_coco(gg, joint=F,p_value_threshold =9.186111e-06)
gg = prep_dataset_coco(data_set=f_merge, ld_matrix=ld_abcg2,hwe_variance = F,exact=T, var_y=1.6421)
gg$data_set$neff
gg$data_set$neff
gg = prep_dataset_coco(data_set=f_merge, ld_matrix=ld_abcg2,hwe_variance = F,exact=T, var_y=1.6421)
lel = stepwise_coco(gg, joint=F,p_value_threshold =9.186111e-06)
summary(lm(y ~ X[,1:2]))
summary(lm(y ~ X[,1:2]))
source('~/Programming/OpenSource/MyGitHub/coco/R/joint_algebra.R')
source('~/Programming/OpenSource/MyGitHub/coco/R/joint_algebra.R')
source('~/Programming/OpenSource/MyGitHub/coco/R/joint_algebra.R')
source('~/Programming/OpenSource/MyGitHub/coco/R/joint_algebra.R')
library(coco)
X = c()
for(i in 1:100){
h1 <- rmvbin(N, c(p1,p2), bincorr=(1-rho)*diag(2)+rho)
h2 <- rmvbin(N, c(p1,p2), bincorr=(1-rho)*diag(2)+rho)
g1 = (h1[,1] + h2[,1])
g2 = (h1[,2] + h2[,2])
X = cbind(X, g1,g2)
}
N=100
for(i in 1:100){
h1 <- rmvbin(N, c(p1,p2), bincorr=(1-rho)*diag(2)+rho)
h2 <- rmvbin(N, c(p1,p2), bincorr=(1-rho)*diag(2)+rho)
g1 = (h1[,1] + h2[,1])
g2 = (h1[,2] + h2[,2])
X = cbind(X, g1,g2)
}
dim(X)
X = c()
N=100
for(i in 1:100){
h1 <- rmvbin(N, c(p1,p2), bincorr=(1-rho)*diag(2)+rho)
h2 <- rmvbin(N, c(p1,p2), bincorr=(1-rho)*diag(2)+rho)
g1 = (h1[,1] + h2[,1])
g2 = (h1[,2] + h2[,2])
X = cbind(X, g1,g2)
}
dim(X)
X = c()
N=100
for(i in 1:100){
h1 <- rmvbin(N, c(p1,p2), bincorr=(1-rho)*diag(2)+rho)
h2 <- rmvbin(N, c(p1,p2), bincorr=(1-rho)*diag(2)+rho)
g1 = (h1[,1] + h2[,1])
g2 = (h1[,2] + h2[,2])
X = cbind(X, g1,g2)
}
dim(X)
beta = rep(c(0.1,0),50)
h_sq = .6
eta = X %*% beta
y = eta + rnorm(N, 0, sd=sqrt((1-h_sq)))
summary(lm(y ~ X))
dim(X)
X[1,]
X[100,]
X[101,]
eta = X %*% beta
y = eta + rnorm(N, 0, sd=sqrt((1-h_sq)))
length(y)
N
y = eta + rnorm(N, 0, sd=sqrt((1-h_sq)))
N
eta = X %*% beta
dim(X)
dim(Beta)
beta = rep(c(0.1,0),100)
h_sq = .6
eta = X %*% beta
y = eta + rnorm(N, 0, sd=sqrt((1-h_sq)))
summary(lm(y ~ X))
y = eta + rnorm(N, 0, sd=sqrt((1-h_sq)))
library(glmnet)
install.packages("glmnet")
library(MASS)
lm.ridge(y ~ X)
lm.ridge(y ~ X,lambda = 0)
dim(X)
lm.ridge(y ~ X,lambda = 10)
summary(lm.ridge(y ~ X,lambda = 10))
(lm.ridge(y ~ X,lambda = 10))
(lm.ridge(y ~ X,lambda = 1000))
(lm.ridge(y ~ X,lambda = 10000))
fit = glmnet(X, y, alpha = 0, weights = c(rep(1,50),rep(2,50)), nlambda = 20)
library(glmnet)
fit = glmnet(X, y, alpha = 0, weights = c(rep(1,50),rep(2,50)), nlambda = 20)
fit
cvfit = cv.glmnet(X, y, type.measure = "mse", nfolds = 20)
cvfit
cor(X)
cor(t(X))
geno = cor(t(X))
geno
geno = cor(t(X))
apply(geno,1,X)
apply(geno,1,var)
dim(X)
geno = cor((X))
dim(geno)
diag(geno)
geno = cor((X))
apply(geno,1,var)
length(apply(geno,1,var))
geno = cor((X))
wow = apply(geno,1,var)
coef(lm(y ~ X))
coef(lm.ridge(y ~ X))
coef(lm.ridge(y ~ X,lambda = 0))
wow = apply(geno,1,var)
coef(lm.ridge(y ~ X,lambda = 0))
cbind(1:200)
cbind(1:200,wow)
cbind(1:200,wow,200)
wow = apply(geno,1,var)
wow = apply(geno,1,mean)
wow = apply(geno,1,mean)/2
wow
wow = apply(geno,1,mean)/2
wow
wow = apply(geno,1,mean)/2
wow
wow2 = apply(geno,1,mean)/2
wow2
x
X
geno = cor((X))
wow = apply(geno,1,var)
wow2 = apply(geno,1,mean)/2
wow2
wow
geno = cor((X))
wow = apply(geno,1,var)
wow2 = apply(geno,1,mean)/2
Y
mean(y)
y
summary(y ~ X[,1])
summary(lm(y ~ X[,1]))
summary(lm(y ~ X[,2]))
summary(lm(y ~ X[,3]))
summary(lm(y ~ X[,4]))
summary(lm(y ~ X[,5]))
summary(lm(y ~ X[,56))
summary(lm(y ~ X[,6]))
summary(lm(y ~ X[,7]))
geno = cor((X))
wow = apply(geno,1,var)
wow2 = apply(geno,1,mean)/2
coef(lm.ridge(y ~ X,lambda = 0))
wow2 = apply(geno,1,mean)/2
cbind(1:200,wow,200,wow)
cbind(1:200,wow,200,wow2)
X
X[,1]
mean(X[,1])
mean(X[,1])/2
wow = apply(geno,2,var)
coef(lm.ridge(y ~ X,lambda = 0))
wow2 = apply(geno,2,mean)/2
cbind(1:200,wow,200,wow2)
wow = apply(geno,2,var)
geno = cor((X))
wow = apply(X,2,var)
coef(lm.ridge(y ~ X,lambda = 0))
wow2 = apply(X,2,mean)/2
cbind(1:200,wow,200,wow2)
colnames(a) = c("SNP","GVAR","N","MAF")
a = cbind(1:200,wow,200,wow2)
colnames(a) = c("SNP","GVAR","N","MAF")
colnames(a)
prep_dataset_coco(a,geno)
a = cbind(1:200,wow,200,wow2)
colnames(a) = c("RSID","GVAR","N","MAF")
prep_dataset_coco(a,geno)
dim(a)
a$
a$RSID
colnames(a)
a$RSID
a = cbind(1:200,wow,200,wow2)
colnames(a) = c("RSID","GVAR","N","MAF")
prep_dataset_coco(a,geno)
a$
colnames(a)
a$GVAR
a$GVAR
dim(a)
a = cbind(1:200,wow,200,wow2)
colnames(a) = c("RSID","GVAR","N","MAF")
prep_dataset_coco(a,geno)
class(a)
geno = cor((X))
wow = apply(X,2,var)
coef(lm.ridge(y ~ X,lambda = 0))
wow2 = apply(X,2,mean)/2
a = as.data.frame(cbind(1:200,wow,200,wow2))
colnames(a) = c("RSID","GVAR","N","MAF")
prep_dataset_coco(a,geno)
geno = cor((X))
wow = apply(X,2,var)
coef(lm.ridge(y ~ X,lambda = 0))
wow2 = apply(X,2,mean)/2
a = as.data.frame(cbind(1:200,wow,200,wow2))
colnames(a) = c("RSID","GVAR","N","MAF")
prep_dataset_coco(a,geno)
a = as.data.frame(cbind(1:200,1:200,wow,200,wow2))
colnames(a) = c("RSID","POS","GVAR","N","MAF")
prep_dataset_coco(a,geno)
))
a = as.data.frame(cbind(1:200,1:200,wow,200,wow2,  coef(lm.ridge(y ~ X,lambda = 0))))
a = as.data.frame(cbind(1:200,1:200,wow,200,wow2,  coef(lm.ridge(y ~ X,lambda = 0))))
coef(lm.ridge(y ~ X,lambda = 0))
?lm.ridge
fit = glmnet(X, y, alpha = 0, weights = c(rep(1,50),rep(2,50)), nlambda = 20)
fit
a = as.data.frame(cbind(1:200,1:200,wow,200,wow2,  coef(lm.ridge(y ~ X,lambda = 0))))
coef(lm.ridge(y ~ X,lambda = 0)))
coef(lm.ridge(y ~ X,lambda = 0))
coef(lm.ridge(y ~ X,lambda = 0))[1:100]
coef(lm.ridge(y ~ X,lambda = 0))[1:100,]
coef(lm.ridge(y ~ X,lambda = 0))[1:100]
sum(beta)
h_sq = 20
eta = X %*% beta
y = eta + rnorm(N, 0, sd=sqrt((1-h_sq)))
h_sq = 12
eta = X %*% beta
y = eta + rnorm(N, 0, sd=sqrt((20-h_sq)))
y
eta
eta = X %*% beta
y = eta + rnorm(N, 0, sd=sqrt((20-h_sq)))
coef(lm.ridge(y ~ X,lambda = 0))
coef(lm.ridge(y ~ X,lambda = 0))[1:100]
coef(lm.ridge(y ~ X,lambda = 0))[1:201]
coef(lm.ridge(y ~ X,lambda = 0))[2:201]
a = as.data.frame(cbind(1:200,1:200,wow,200,wow2,  coef(lm.ridge(y ~ X,lambda = 0))[2:201]))
))
colnames(a) = c("RSID","POS","GVAR","N","MAF")
fit = glmnet(X, y, alpha = 0, weights = c(rep(1,50),rep(2,50)), nlambda = 20)
geno = cor((X))
wow = apply(X,2,var)
coef(lm.ridge(y ~ X,lambda = 0))
wow2 = apply(X,2,mean)/2
a = as.data.frame(cbind(1:200,1:200,wow,200,wow2,  coef(lm.ridge(y ~ X,lambda = 0))[2:201]))
)
colnames(a) = c("RSID","POS","GVAR","N","MAF")
a = as.data.frame(cbind(1:200,1:200,wow,200,wow2,  coef(lm.ridge(y ~ X,lambda = 0))[2:201]))
a = as.data.frame(cbind(1:200,1:200,wow,200,wow2,  coef(lm.ridge(y ~ X,lambda = 0))[2:201]))
colnames(a) = c("RSID","POS","GVAR","N","MAF")
prep_dataset_coco(a,geno)
a = as.data.frame(cbind(1:200,1:200,wow,200,wow2,  coef(lm.ridge(y ~ X,lambda = 0))[2:201]))
colnames(a) = c("RSID","POS","GVAR","N","MAF","BETA")
prep_dataset_coco(a,geno)
a = as.data.frame(cbind(1:200,1:200,wow,200,wow2,  coef(lm.ridge(y ~ X,lambda = 0))[2:201],1))
colnames(a) = c("RSID","POS","GVAR","N","MAF","BETA","SE")
prep_dataset_coco(a,geno)
prep_dataset_coco(a,geno,exact = T)
var(Y)
var(y)
prep_dataset_coco(a,geno,exact = T,9.446896 )
prep_dataset_coco(a,geno,exact = T,9.446896)
gg = prep_dataset_coco(a,geno,exact = T,9.446896)
stepwise_results(gg)
gg = prep_dataset_coco(a,geno,exact = T,9.446896)
colnames(a) = c("RSID","POS","GVAR","N","MAF","BETA","SE")
gg = prep_dataset_coco(a,geno,exact = T,9.446896)
gg = prep_dataset_coco(a,geno,exact = T,9.446896)
gg
source("R/corrcond.R")
library(data.table)
source("R/symmetrcize.R")
source("R/estimate_betas.R")
ld_matrix = as.matrix(fread("data2/CM6_Cauc-NEK1_imputed-LDcorr5523.ld", header=F))
frequencies = read.table("data2/CM6_Cauc-NEK1_imputed-LDcorr5523.snpdat", header=T)
ld_matrix = as.matrix(fread("data2/CM6_Cauc-NEK1_imputed-LDcorr5523.ld", header=F))
ld_matrix = as.matrix(fread("data2/CM6_Cauc-NEK1_imputed-LDcorr5523.ld", header=F))
#ld_matrix2 = as.matrix(fread("data2/CM6_Cauc-NEK1_imputed-LDcorr4785.ld", header=F))
ld_matrix = symmetricize(ld_matrix)
frequencies = read.table("data2/CM6_Cauc-NEK1_imputed-LDcorr5523.snpdat", header=T)
corr = read.table("data2/forCoco2", header=T)
corr = read.table("data/linear_452_5523_covar.cond2.assoc.linear", header=T)
freq_af = frequencies
g = prep_dataset_coco(freq_af,ld_matrix )
freq_af
corr = read.table("data2/forCoco2", header=T)
corr = read.table("data/linear_452_5523_covar.cond2.assoc.linear", header=T)
freq_af = frequencies
dos_data = setDF(fread("data2/NEK1_Cauc_452_dos.txt", header=T))
res_preparation = prep_dataset_common(data_set = freq_af,ld_matrix= ld_matrix,hwe_variance =F)
rsids =10:ncol(dos_data)
beta_unadj =c()
se_unadj = c()
gvars =c()
#  dos_data$ENSG00000137601 = dos_data$ENSG00000137601 > -0.06102
for(j in rsids){
m1 = summary(glm(scale(dos_data$ENSG00000137601, scale=F) ~ scale(dos_data[,j], scale = F)))
beta_unadj = c(beta_unadj,coef(m1)[2,1])
se_unadj = c(se_unadj,coef(m1)[2,2])
gvars  = c(gvars, var(dos_data[,j]))
}
freq_af$beta = beta_unadj
freq_af$se = se_unadj
freq_af$GVAR = gvars
freq_af$n =452
g = prep_dataset_coco(freq_af,ld_matrix )
g = prep_dataset_coco(freq_af,ld_matrix )
source('~/Programming/OpenSource/MyGitHub/coco/R/estimate_vary.R')
g = prep_dataset_coco(freq_af,ld_matrix )
g = prep_dataset_coco(freq_af,ld_matrix )
g$var_y
g$data_set$neff
summary(g$data_set$neff)
g = prep_dataset_coco(freq_af,ld_matrix )
g = prep_dataset_coco(freq_af,ld_matrix, hwe_variance = T)
summary(g$data_set$neff)
g = prep_dataset_coco(freq_af,ld_matrix, hwe_variance = T,exact=TRUE)
g$data_set$neff
summary(g$data_set$neff)
g = prep_dataset_coco(freq_af,ld_matrix, hwe_variance = F,exact=TRUE)
summary(g$data_set$neff)
summary(g$data_set$neff)
source('~/Programming/OpenSource/MyGitHub/coco/R/prep_dataset_coco.R')
g = prep_dataset_coco(freq_af,ld_matrix, hwe_variance = F,exact=TRUE)
summary(g$data_set$neff)
g = prep_dataset_coco(freq_af,ld_matrix, hwe_variance = T,exact=F)
summary(g$data_set$neff)
sqrt(800)
sqrt(400)
a
stepwise_coco(g)
g
stepwise_coco(g)
source('~/Programming/OpenSource/MyGitHub/coco/R/joint_algebra.R')
source('~/Programming/OpenSource/MyGitHub/coco/R/joint_algebra.R')
stepwise_coco(g)
source('~/Programming/OpenSource/MyGitHub/coco/R/joint_algebra.R')
stepwise_coco(g)
stepwise_coco(g)
stepwise_coco(g)
source('~/Programming/OpenSource/MyGitHub/coco/R/joint_algebra.R')
stepwise_coco(g)
stepwise_coco(g)
X
summary(lm(y ~ X[,1:2]))
summary(lm(y ~ X[,1]))
summary(lm(y ~ X[,1:2]))
summary(lm(y ~ X[,1:3]))
summary(lm(y ~ X[,1:4]))
summary(lm(y ~ X[,1:5]))
summary(lm(y ~ X[,1:6]))
summary(lm(y ~ X[,1:7]))
