{
    "collab_server" : "",
    "contents" : "# Test corrcond\n\n```{r, echo=T}\n  source(\"R/corrcond.R\")\n  library(data.table)\n  ld_matrix = as.matrix(read.table(\"/Volumes/Elements/paintor_runs/final_regions/11_5:72375077-72506696.LD.EUR.old\", header=F))\n  frequencies = read.table(\"/Volumes/Elements/paintor_runs/final_regions/11_5:72375077-72506696.EUR\", header=F)\n  kottgen_meta_analysis = fread(\"~/Dunedin/Tony/Metanalysis/input_smr.txt\", header=T)\n  all_af = fread(\"/Volumes/Elements/ftp.1000genomes.ebi.ac.uk/vol1/ftp/release/20130502/all_af.txt\", header=F)\n  freq_af = merge(frequencies,all_af,by.x=3,by.y=1)\n  colnames(freq_af) = c(\"rsid\",\"chr\",\"pos\",\"Z\",\"chr1\",\"pos1\",\"a1\",\"a2\",\"pop1\",\"af\")\n  freq_af$af = as.numeric(freq_af$af)\n  \n    idxs_with_betas = which(freq_af$rsid %in% kottgen_meta_analysis$SNP)\n  #freq_af = merge(freq_af,kottgen_meta_analysis,by=1)\n  ld_matrix= ld_matrix[idxs_with_betas,idxs_with_betas]\n  freq_af = freq_af[idxs_with_betas,]\n  freq_af = merge(freq_af,kottgen_meta_analysis,by=1)\n  freq_af = freq_af[order(freq_af$pos),]\n  #freq_af$n = freq_af$TotalSampleSize\n  #freq_af$se = freq_af$StdErr\n  #freq_af$b = freq_af$Effect\n  #stepwise_conditional_run(data_set = freq_af)\n  stepwise_conditional_wrapper(data_set = freq_af, ld_matrix=ld_matrix,p_value_threshold = 1e-3,var_y = 1.6421, ld_noise=0.1)\n    # Generate hwe_diagonal\n  \n  \n  res_preparation = prep_dataset_common(data_set = freq_af,ld_matrix= ld_matrix,ld_noise=0.1)\n  stepwise_results = stepwise_conditional_run(res_preparation = res_preparation,p_value_threshold = 1e-3,var_y = 1.6421)\n  all_but_one_df = all_but_one(res_preparation=res_preparation,stepwise_results = stepwise_results ,var_y=1.6421)\n  \n\n```\n\n# Alright testing the conditional analysis fuction\n\n```{r, echo=T}\n    source(\"R/corrcond.R\")\n  #  stepwise_results = stepwise_conditional_run(data_set = freq_af, ld_matrix=ld_matrix,p_value_threshold = 0.0001)\n    \n```\n\n```{r, echo=T}\n  freq_af = read.table(\"data/snp_summary.txt\", header=T)\n  ld_matrix = as.matrix(read.table(\"data/ld_matrix_test.txt\", header=F))\n  stepwise_results = stepwise_conditional_run(data_set = freq_af, ld_matrix=ld_matrix,p_value_threshold = 1e-4,var_y = 1.6421)\n  all_but_one_df = all_but_one(data_set =freq_af, ld_matrix = ld_matrix,stepwise_results = stepwise_results ,var_y=1.6421)\n\n```\n\n\n\n\n# Testing with daner files and chr2_200825237_I_2merged_2_200628237_201293237\n```{r, echo=T}\n  source(\"R/corrcond.R\")\n  source(\"R/symmetrcize.R\")\n  ld_matrix = as.matrix(read.table(\"data/chr2_200825237_I_2merged_2_200628237_201293237.ld\", header=F))\n  ld_matrix = symmetricize(ld_matrix)\n  snpdat = read.table(\"data/chr2_200825237_I_2merged_2_200628237_201293237.ld.snpdat\", header=T)\n  daner = read.table(\"data/daner_PGC_SCZ52_0513a_hq2-chr2_200825237_I_2merged_2_200628237_201293237.txt\", header=T)\n  daner_dat = merge(daner,snpdat, by=\"SNP\")\n  daner_dat$b <- log(daner_dat$OR)\n  daner_dat$se = daner_dat$SE\n  daner_dat$n = daner_dat$sum_n\n  colnames(daner_dat)[c(1,20,21)] = c(\"rsid\",\"af\",\"info\")\n  daner_dat = daner_dat[order(daner_dat$BP.x),]\n\n\n  # Run with old betas\n  res_preparation = prep_dataset_common(data_set = daner_dat,ld_matrix= ld_matrix,ld_noise=0, var_y = 3.7288262)\n  stepwise_results = stepwise_conditional_run(res_preparation = res_preparation,p_value_threshold = 1e-4)\n  all_but_one_df = all_but_one(res_preparation=res_preparation,stepwise_results = stepwise_results)\n  \n  \n  # Plot results\n  par(mfrow=c(2,2))\n  ylim.plot = c(0,max(abs(daner_dat$b/daner_dat$se)))\n  plot(daner_dat$BP.x, abs(daner_dat$b/daner_dat$se),main=\"unconditional\", ylim=ylim.plot)\n#  plot(daner_dat$BP.x, abs(all_but_one_df[[3]]$res_step$beta_new/all_but_one_df[[3]]$res_step$se_new),main=all_but_one_df[[3]]$main_hit)\n  for (i in 1:length(all_but_one_df)) {\n    plot(daner_dat$BP.x, abs(all_but_one_df[[i]]$res_step$beta_new/all_but_one_df[[i]]$res_step$se_new),main=all_but_one_df[[i]]$main_hit, ylim=ylim.plot)\n  }\n  plot(r2[,2], daner_dat$b)\n  plot(all_but_one_df[[1]]$res_step$beta_new, all_but_one_df[[1]]$res_step$beta_new-all_but_one_df1[[1]]$res_step$beta_new)\n  plot(abs(all_but_one_df1[[1]]$res_step$beta_new/all_but_one_df1[[1]]$res_step$se_new), abs(all_but_one_df[[1]]$res_step$beta_new/all_but_one_df[[1]]$res_step$se_new- all_but_one_df1[[1]]$res_step$beta_new/all_but_one_df1[[1]]$res_step$se_new),main=all_but_one_df[[1]]$main_hit)\n  plot(abs(all_but_one_df1[[1]]$res_step$beta_new/all_but_one_df1[[1]]$res_step$se_new), abs(all_but_one_df[[1]]$res_step$beta_new/all_but_one_df[[1]]$res_step$se_new),main=all_but_one_df[[1]]$main_hit)\n  abline(0,1)\n\n  \n  #\n  daner_dat_new_beta =daner_dat\n  u = 0.43097855797849721204\n  r2 =  r_inverse(daner_dat$b ,u,daner_dat$af)\n  r1 = r(daner_dat$b,phi = u,daner_dat$af)\n  gammas = r2[,2]\n  \n  alpha = log(u/(1-u))\n  gamma = gammas * exp(alpha) / ((1+exp(alpha))^2)\n  linear_ses = daner_dat$se * exp(alpha) / ((1+exp(alpha))^2)\n  daner_dat_new_beta$b = gamma\n  daner_dat_new_beta$se = linear_ses\n  y = 2*(daner_dat$af) * (1 - daner_dat$af) * daner_dat$sum_n\n  x = 1/linear_ses^2\n  summary(lm(y ~ x - 1))\n\n  var_y = summary(lm(y ~ x - 1))[2,1]\n  \n  res_preparation = prep_dataset_common(data_set = daner_dat_new_beta,ld_matrix= ld_matrix,ld_noise=0, var_y = 0.2184498)\n  stepwise_results1 = stepwise_conditional_run(res_preparation = res_preparation,p_value_threshold = 1e-4)\n  all_but_one_df1 = all_but_one(res_preparation=res_preparation,stepwise_results = stepwise_results)\n\n  res_preparation_winfo = prep_dataset_common(data_set = daner_dat_new_beta,ld_matrix= ld_matrix,ld_noise=0, var_y = 0.2184498)\n  stepwise_results_winfo = stepwise_conditional_run(res_preparation = res_preparation_winfo,p_value_threshold = 1e-4)\n  all_but_one_df_winfo = all_but_one(res_preparation=res_preparation_winfo,stepwise_results = stepwise_results_winfo)\n  \n  plot(all_but_one_df1[[1]]$res_step$beta_new, all_but_one_df_winfo[[1]]$res_step$beta_new)\n  plot(all_but_one_df1[[1]]$res_step$beta_new/all_but_one_df1[[1]]$res_step$se_new, all_but_one_df_winfo[[1]]$res_step$beta_new/all_but_one_df_winfo[[1]]$res_step$se_new)\n  plot(daner_dat_new_beta$BP.x,abs(all_but_one_df1[[1]]$res_step$beta_new/all_but_one_df1[[1]]$res_step$se_new))\n  plot(daner_dat_new_beta$BP.x,abs(all_but_one_df_winfo[[1]]$res_step$beta_new/all_but_one_df_winfo[[1]]$res_step$se_new))\n\n  all_but_one_df_winfo[[1]]$res_step[which(abs(all_but_one_df_winfo[[1]]$res_step$beta_new/all_but_one_df_winfo[[1]]$res_step$se_new)>3),]\n  \n\n  daner_dat_scaled_beta = daner_dat_new_beta\n  daner_dat_scaled_beta$b = daner_dat_scaled_beta$b * 2*daner_dat_scaled_beta$af*(1-daner_dat_scaled_beta$af)*daner_dat_scaled_beta$info\n  daner_dat_scaled_beta$se = daner_dat_scaled_beta$se * 2*daner_dat_scaled_beta$af*(1-daner_dat_scaled_beta$af)*daner_dat_scaled_beta$info\n  \n  wrapper = function(my_data_set = NULL, ld_matrix= ld_matrix,ld_noise=0, var_y = 0.2184498,p_value_threshold = 1e-4) {\n    res_preparation_x = prep_dataset_common(data_set = my_data_set,ld_matrix= ld_matrix,ld_noise=ld_noise, var_y = var_y)\n    stepwise_results_x = stepwise_conditional_run(res_preparation = res_preparation_x,p_value_threshold = p_value_threshold)\n    all_but_one_df_scaldbeta = all_but_one(res_preparation=res_preparation_x,stepwise_results = stepwise_results_x)\n  }\n  \n  res_preparation_scaldbeta = prep_dataset_common(data_set = daner_dat_new_beta,ld_matrix= ld_matrix,ld_noise=0, var_y = 0.2184498)\n  stepwise_results_scaldbeta = stepwise_conditional_run(res_preparation = res_preparation_winfo,p_value_threshold = 1e-4)\n  all_but_one_df_scaldbeta = all_but_one(res_preparation=res_preparationscaldbeta,stepwise_results = stepwise_results_winfo)\n  \n  plot(all_but_one_df1[[1]]$res_step$beta_new, all_but_one_df_winfo[[1]]$res_step$beta_new)\n  plot(all_but_one_df1[[1]]$res_step$beta_new/all_but_one_df1[[1]]$res_step$se_new, all_but_one_df_winfo[[1]]$res_step$beta_new/all_but_one_df_winfo[[1]]$res_step$se_new)\n  plot(daner_dat_new_beta$BP.x,abs(all_but_one_df1[[1]]$res_step$beta_new/all_but_one_df1[[1]]$res_step$se_new))\n  plot(daner_dat_new_beta$BP.x,abs(all_but_one_df_winfo[[1]]$res_step$beta_new/all_but_one_df_winfo[[1]]$res_step$se_new))\n\n  \n  # Plot results\n  par(mfrow=c(2,2))\n  ylim.plot = c(0,max(abs(daner_dat$b/daner_dat$se)))\n  plot(daner_dat$BP.x, abs(daner_dat$b/daner_dat$se),main=\"unconditional\", ylim=ylim.plot)\n  points(daner_dat_new_beta$BP.x, abs(daner_dat_new_beta$b/daner_dat_new_beta$se), pch=\"x\")\n#  plot(daner_dat$BP.x, abs(all_but_one_df[[3]]$res_step$beta_new/all_but_one_df[[3]]$res_step$se_new),main=all_but_one_df[[3]]$main_hit)\n  for (i in 1:length(all_but_one_df)) {\n    plot(daner_dat$BP.x, abs(all_but_one_df[[i]]$res_step$beta_new/all_but_one_df[[i]]$res_step$se_new),main=all_but_one_df[[i]]$main_hit, ylim=ylim.plot)\n    points(daner_dat$BP.x, abs(all_but_one_df1[[i]]$res_step$beta_new/all_but_one_df1[[i]]$res_step$se_new),pch=\"x\")\n  }\n  \n  \n  test = daner_dat[c(515,14,1648),]\n  ld_test = ld_matrix[c(515,14,1648),c(515,14,1648)]\n  stepwise_results = stepwise_conditional_run(data_set = test, ld_matrix = ld_test, p_value_threshold = 1e-4,  var_y = 3.7288262)  \n  \n```\n\n\n\n\n\n",
    "created" : 1470181516169.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2695398749",
    "id" : "25331633",
    "lastKnownWriteTime" : 1470370864,
    "last_content_update" : 1470370864026,
    "path" : "~/Sinai/corrcond/R/test_corrcond.Rmd",
    "project_path" : "R/test_corrcond.Rmd",
    "properties" : {
        "docOutlineVisible" : "0",
        "marks" : "<:49,-1\n>:49,0",
        "source_window_id" : "",
        "tempName" : "Untitled1"
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}